{"ast":null,"code":"var _jsxFileName = \"D:\\\\Ofppt\\\\cours 2 annee\\\\Cours_Approche_Agile\\\\github dossier\\\\gittpReact\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faFrown } from '@fortawesome/free-solid-svg-icons';\n// import { Oval } from 'react-loader-spinner';\n// import './App.css';\n\n// function Grp204WeatherApp() {\n//     const [input, setInput] = useState('');\n//     const [weather, setWeather] = useState({\n//         loading: false,\n//         data: null,\n//         forecast: null,\n//         error: false,\n//     });\n\n//     const apiKey = 'f00c38e0279b7bc85480c3fe775d518c';\n\n//     // Formater la date\n//     const formatDate = (timestamp) => {\n//         const date = new Date(timestamp * 1000);\n//         const days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n//         return `${days[date.getDay()]} ${date.getDate()}`;\n//     };\n\n//     // Recherche météo\n//     const search = async (event) => {\n//         if (event.key === 'Enter') {\n//             event.preventDefault();\n//             if (!input.trim()) return;\n\n//             setWeather({ ...weather, loading: true, error: false });\n\n//             try {\n//                 // Appel API pour les données actuelles\n//                 const currentWeatherResponse = await axios.get(\n//                     'https://api.openweathermap.org/data/2.5/weather',\n//                     {\n//                         params: {\n//                             q: input.trim(),\n//                             units: 'metric',\n//                             appid: apiKey,\n//                         },\n//                     }\n//                 );\n\n//                 // Appel API pour les prévisions sur 5 jours\n//                 const forecastResponse = await axios.get(\n//                     'https://api.openweathermap.org/data/2.5/forecast',\n//                     {\n//                         params: {\n//                             q: input.trim(),\n//                             units: 'metric',\n//                             appid: apiKey,\n//                         },\n//                     }\n//                 );\n\n//                 setWeather({\n//                     loading: false,\n//                     data: currentWeatherResponse.data,\n//                     forecast: forecastResponse.data,\n//                     error: false,\n//                 });\n//             } catch (error) {\n//                 console.error('Erreur API:', error);\n//                 setWeather({ loading: false, data: null, forecast: null, error: true });\n//             }\n//         }\n//     };\n\n//     return (\n//         <div className=\"App\">\n//             <h1 className=\"app-name\">Application Météo grp204</h1>\n//             <div className=\"search-bar\">\n//                 <input\n//                     type=\"text\"\n//                     className=\"city-search\"\n//                     placeholder=\"Entrez le nom de la ville...\"\n//                     value={input}\n//                     onChange={(e) => setInput(e.target.value)}\n//                     onKeyPress={search}\n//                 />\n//             </div>\n\n//             {weather.loading && (\n//                 <div className=\"loading\">\n//                     <Oval color=\"blue\" height={50} width={50} />\n//                 </div>\n//             )}\n\n//             {weather.error && (\n//                 <div className=\"error-message\">\n//                     <FontAwesomeIcon icon={faFrown} />\n//                     <span> Ville introuvable. Veuillez réessayer. </span>\n//                 </div>\n//             )}\n\n//             {weather.data && (\n//                 <div className=\"weather-info\">\n//                     <h2>\n//                         {weather.data.name}, {weather.data.sys.country}\n//                     </h2>\n//                     <img\n//                         src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\n//                         alt={weather.data.weather[0].description}\n//                     />\n//                     <p>{Math.round(weather.data.main.temp)}°C</p>\n//                     <p>{weather.data.weather[0].description}</p>\n//                     <p>Vent : {weather.data.wind.speed} m/s</p>\n//                 </div>\n//             )}\n\n//             {weather.forecast && (\n//                 <div className=\"forecast-container\">\n//                     <h3>Prévisions sur 5 jours :</h3>\n//                     <div className=\"forecast-list\">\n//                         {weather.forecast.list\n//                             .filter((_, index) => index % 8 === 0) // Filtrer pour obtenir 1 prévision par jour\n//                             .map((forecast, index) => (\n//                                 <div className=\"forecast-item\" key={index}>\n//                                     <p>{formatDate(forecast.dt)}</p>\n//                                     <img\n//                                         src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`}\n//                                         alt={forecast.weather[0].description}\n//                                     />\n//                                     <p>{Math.round(forecast.main.temp)}°C</p>\n//                                 </div>\n//                             ))}\n//                     </div>\n//                 </div>\n//             )}\n//         </div>\n//     );\n// }\n\n// export default Grp204WeatherApp;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFrown, faStar } from '@fortawesome/free-solid-svg-icons';\nimport { Oval } from 'react-loader-spinner';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Grp204WeatherApp() {\n  _s();\n  const [input, setInput] = useState('');\n  const [weather, setWeather] = useState({\n    loading: false,\n    data: null,\n    forecast: null,\n    error: false\n  });\n  const [favorites, setFavorites] = useState([]);\n  const apiKey = 'f00c38e0279b7bc85480c3fe775d518c';\n\n  // Charger les favoris depuis le localStorage\n  useEffect(() => {\n    const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\n    setFavorites(savedFavorites);\n  }, []);\n\n  // Sauvegarder les favoris dans le localStorage\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const formatDate = timestamp => {\n    const date = new Date(timestamp * 1000);\n    const days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\n    return `${days[date.getDay()]} ${date.getDate()}`;\n  };\n  const search = async event => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (!input.trim()) return;\n      setWeather({\n        ...weather,\n        loading: true,\n        error: false\n      });\n      try {\n        const currentWeatherResponse = await axios.get('https://api.openweathermap.org/data/2.5/weather', {\n          params: {\n            q: input.trim(),\n            units: 'metric',\n            appid: apiKey\n          }\n        });\n        const forecastResponse = await axios.get('https://api.openweathermap.org/data/2.5/forecast', {\n          params: {\n            q: input.trim(),\n            units: 'metric',\n            appid: apiKey\n          }\n        });\n        setWeather({\n          loading: false,\n          data: currentWeatherResponse.data,\n          forecast: forecastResponse.data,\n          error: false\n        });\n      } catch (error) {\n        console.error('Erreur API:', error);\n        setWeather({\n          loading: false,\n          data: null,\n          forecast: null,\n          error: true\n        });\n      }\n    }\n  };\n  Feature; // Ajouter une ville aux favoris\n  const addToFavorites = () => {\n    if (weather.data && !favorites.some(city => city.toLowerCase() === weather.data.name.toLowerCase())) {\n      setFavorites([...favorites, weather.data.name]);\n    }\n  };\n\n  // Charger une ville favorite\n  const loadFavorite = city => {\n    setInput(city);\n    setWeather({\n      ...weather,\n      loading: true,\n      error: false\n    });\n    search({\n      key: 'Enter'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-name\",\n      children: \"Application M\\xE9t\\xE9o grp204\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"city-search\",\n        placeholder: \"Entrez le nom de la ville...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-favorite\",\n        onClick: addToFavorites,\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faStar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), \" Ajouter aux favoris\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favorites-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Villes favorites :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: favorites.map((city, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => loadFavorite(city),\n          children: city\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this), weather.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: /*#__PURE__*/_jsxDEV(Oval, {\n        color: \"blue\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }, this), weather.error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faFrown\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" Ville introuvable. Veuillez r\\xE9essayer. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this), weather.data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [weather.data.name, \", \", weather.data.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`,\n        alt: weather.data.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.round(weather.data.main.temp), \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.data.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Vent : \", weather.data.wind.speed, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }, this), weather.forecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forecast-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pr\\xE9visions sur 5 jours :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-list\",\n        children: weather.forecast.list.filter((_, index) => index % 8 === 0).map((forecast, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: formatDate(forecast.dt)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`,\n            alt: forecast.weather[0].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [Math.round(forecast.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, this);\n}\n_s(Grp204WeatherApp, \"gC+2ttgu1xUo+6Z8UOe8AExjZ6w=\");\n_c = Grp204WeatherApp;\nexport default Grp204WeatherApp;\nvar _c;\n$RefreshReg$(_c, \"Grp204WeatherApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","FontAwesomeIcon","faFrown","faStar","Oval","jsxDEV","_jsxDEV","Grp204WeatherApp","_s","input","setInput","weather","setWeather","loading","data","forecast","error","favorites","setFavorites","apiKey","savedFavorites","JSON","parse","localStorage","getItem","setItem","stringify","formatDate","timestamp","date","Date","days","getDay","getDate","search","event","key","preventDefault","trim","currentWeatherResponse","get","params","q","units","appid","forecastResponse","console","Feature","addToFavorites","some","city","toLowerCase","name","loadFavorite","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyPress","onClick","icon","map","index","color","height","width","sys","country","src","alt","description","Math","round","main","temp","wind","speed","list","filter","_","dt","_c","$RefreshReg$"],"sources":["D:/Ofppt/cours 2 annee/Cours_Approche_Agile/github dossier/gittpReact/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import axios from 'axios';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faFrown } from '@fortawesome/free-solid-svg-icons';\r\n// import { Oval } from 'react-loader-spinner';\r\n// import './App.css';\r\n\r\n// function Grp204WeatherApp() {\r\n//     const [input, setInput] = useState('');\r\n//     const [weather, setWeather] = useState({\r\n//         loading: false,\r\n//         data: null,\r\n//         forecast: null,\r\n//         error: false,\r\n//     });\r\n\r\n//     const apiKey = 'f00c38e0279b7bc85480c3fe775d518c';\r\n\r\n//     // Formater la date\r\n//     const formatDate = (timestamp) => {\r\n//         const date = new Date(timestamp * 1000);\r\n//         const days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\r\n//         return `${days[date.getDay()]} ${date.getDate()}`;\r\n//     };\r\n\r\n//     // Recherche météo\r\n//     const search = async (event) => {\r\n//         if (event.key === 'Enter') {\r\n//             event.preventDefault();\r\n//             if (!input.trim()) return;\r\n\r\n//             setWeather({ ...weather, loading: true, error: false });\r\n\r\n//             try {\r\n//                 // Appel API pour les données actuelles\r\n//                 const currentWeatherResponse = await axios.get(\r\n//                     'https://api.openweathermap.org/data/2.5/weather',\r\n//                     {\r\n//                         params: {\r\n//                             q: input.trim(),\r\n//                             units: 'metric',\r\n//                             appid: apiKey,\r\n//                         },\r\n//                     }\r\n//                 );\r\n\r\n//                 // Appel API pour les prévisions sur 5 jours\r\n//                 const forecastResponse = await axios.get(\r\n//                     'https://api.openweathermap.org/data/2.5/forecast',\r\n//                     {\r\n//                         params: {\r\n//                             q: input.trim(),\r\n//                             units: 'metric',\r\n//                             appid: apiKey,\r\n//                         },\r\n//                     }\r\n//                 );\r\n\r\n//                 setWeather({\r\n//                     loading: false,\r\n//                     data: currentWeatherResponse.data,\r\n//                     forecast: forecastResponse.data,\r\n//                     error: false,\r\n//                 });\r\n//             } catch (error) {\r\n//                 console.error('Erreur API:', error);\r\n//                 setWeather({ loading: false, data: null, forecast: null, error: true });\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"App\">\r\n//             <h1 className=\"app-name\">Application Météo grp204</h1>\r\n//             <div className=\"search-bar\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     className=\"city-search\"\r\n//                     placeholder=\"Entrez le nom de la ville...\"\r\n//                     value={input}\r\n//                     onChange={(e) => setInput(e.target.value)}\r\n//                     onKeyPress={search}\r\n//                 />\r\n//             </div>\r\n\r\n//             {weather.loading && (\r\n//                 <div className=\"loading\">\r\n//                     <Oval color=\"blue\" height={50} width={50} />\r\n//                 </div>\r\n//             )}\r\n\r\n//             {weather.error && (\r\n//                 <div className=\"error-message\">\r\n//                     <FontAwesomeIcon icon={faFrown} />\r\n//                     <span> Ville introuvable. Veuillez réessayer. </span>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {weather.data && (\r\n//                 <div className=\"weather-info\">\r\n//                     <h2>\r\n//                         {weather.data.name}, {weather.data.sys.country}\r\n//                     </h2>\r\n//                     <img\r\n//                         src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\r\n//                         alt={weather.data.weather[0].description}\r\n//                     />\r\n//                     <p>{Math.round(weather.data.main.temp)}°C</p>\r\n//                     <p>{weather.data.weather[0].description}</p>\r\n//                     <p>Vent : {weather.data.wind.speed} m/s</p>\r\n//                 </div>\r\n//             )}\r\n\r\n//             {weather.forecast && (\r\n//                 <div className=\"forecast-container\">\r\n//                     <h3>Prévisions sur 5 jours :</h3>\r\n//                     <div className=\"forecast-list\">\r\n//                         {weather.forecast.list\r\n//                             .filter((_, index) => index % 8 === 0) // Filtrer pour obtenir 1 prévision par jour\r\n//                             .map((forecast, index) => (\r\n//                                 <div className=\"forecast-item\" key={index}>\r\n//                                     <p>{formatDate(forecast.dt)}</p>\r\n//                                     <img\r\n//                                         src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`}\r\n//                                         alt={forecast.weather[0].description}\r\n//                                     />\r\n//                                     <p>{Math.round(forecast.main.temp)}°C</p>\r\n//                                 </div>\r\n//                             ))}\r\n//                     </div>\r\n//                 </div>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Grp204WeatherApp;\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFrown, faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport { Oval } from 'react-loader-spinner';\r\nimport './App.css';\r\n\r\nfunction Grp204WeatherApp() {\r\n    const [input, setInput] = useState('');\r\n    const [weather, setWeather] = useState({\r\n        loading: false,\r\n        data: null,\r\n        forecast: null,\r\n        error: false,\r\n    });\r\n    const [favorites, setFavorites] = useState([]);\r\n\r\n    const apiKey = 'f00c38e0279b7bc85480c3fe775d518c';\r\n\r\n    // Charger les favoris depuis le localStorage\r\n    useEffect(() => {\r\n        const savedFavorites = JSON.parse(localStorage.getItem('favorites')) || [];\r\n        setFavorites(savedFavorites);\r\n    }, []);\r\n\r\n    // Sauvegarder les favoris dans le localStorage\r\n    useEffect(() => {\r\n        localStorage.setItem('favorites', JSON.stringify(favorites));\r\n    }, [favorites]);\r\n\r\n    const formatDate = (timestamp) => {\r\n        const date = new Date(timestamp * 1000);\r\n        const days = ['Dimanche', 'Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi'];\r\n        return `${days[date.getDay()]} ${date.getDate()}`;\r\n    };\r\n\r\n    const search = async (event) => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            if (!input.trim()) return;\r\n\r\n            setWeather({ ...weather, loading: true, error: false });\r\n\r\n            try {\r\n                const currentWeatherResponse = await axios.get(\r\n                    'https://api.openweathermap.org/data/2.5/weather',\r\n                    {\r\n                        params: {\r\n                            q: input.trim(),\r\n                            units: 'metric',\r\n                            appid: apiKey,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                const forecastResponse = await axios.get(\r\n                    'https://api.openweathermap.org/data/2.5/forecast',\r\n                    {\r\n                        params: {\r\n                            q: input.trim(),\r\n                            units: 'metric',\r\n                            appid: apiKey,\r\n                        },\r\n                    }\r\n                );\r\n\r\n                setWeather({\r\n                    loading: false,\r\n                    data: currentWeatherResponse.data,\r\n                    forecast: forecastResponse.data,\r\n                    error: false,\r\n                });\r\n            } catch (error) {\r\n                console.error('Erreur API:', error);\r\n                setWeather({ loading: false, data: null, forecast: null, error: true });\r\n            }\r\n        }\r\n    };\r\n\r\n   Feature // Ajouter une ville aux favoris\r\n    const addToFavorites = () => {\r\n        if (\r\n            weather.data &&\r\n            !favorites.some((city) => city.toLowerCase() === weather.data.name.toLowerCase())\r\n        ) {\r\n            setFavorites([...favorites, weather.data.name]);\r\n        }\r\n    };\r\n\r\n    // Charger une ville favorite\r\n    const loadFavorite = (city) => {\r\n        setInput(city);\r\n        setWeather({ ...weather, loading: true, error: false });\r\n        search({ key: 'Enter' });\r\n    };\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <h1 className=\"app-name\">Application Météo grp204</h1>\r\n            <div className=\"search-bar\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"city-search\"\r\n                    placeholder=\"Entrez le nom de la ville...\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={search}\r\n                />\r\n                <button className=\"add-favorite\" onClick={addToFavorites}>\r\n                    <FontAwesomeIcon icon={faStar} /> Ajouter aux favoris\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"favorites-container\">\r\n                <h3>Villes favorites :</h3>\r\n                <ul>\r\n                    {favorites.map((city, index) => (\r\n                        <li key={index} onClick={() => loadFavorite(city)}>\r\n                            {city}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            {weather.loading && (\r\n                <div className=\"loading\">\r\n                    <Oval color=\"blue\" height={50} width={50} />\r\n                </div>\r\n            )}\r\n\r\n            {weather.error && (\r\n                <div className=\"error-message\">\r\n                    <FontAwesomeIcon icon={faFrown} />\r\n                    <span> Ville introuvable. Veuillez réessayer. </span>\r\n                </div>\r\n            )}\r\n\r\n            {weather.data && (\r\n                <div className=\"weather-info\">\r\n                    <h2>\r\n                        {weather.data.name}, {weather.data.sys.country}\r\n                    </h2>\r\n                    <img\r\n                        src={`https://openweathermap.org/img/wn/${weather.data.weather[0].icon}@2x.png`}\r\n                        alt={weather.data.weather[0].description}\r\n                    />\r\n                    <p>{Math.round(weather.data.main.temp)}°C</p>\r\n                    <p>{weather.data.weather[0].description}</p>\r\n                    <p>Vent : {weather.data.wind.speed} m/s</p>\r\n                </div>\r\n            )}\r\n\r\n            {weather.forecast && (\r\n                <div className=\"forecast-container\">\r\n                    <h3>Prévisions sur 5 jours :</h3>\r\n                    <div className=\"forecast-list\">\r\n                        {weather.forecast.list\r\n                            .filter((_, index) => index % 8 === 0)\r\n                            .map((forecast, index) => (\r\n                                <div className=\"forecast-item\" key={index}>\r\n                                    <p>{formatDate(forecast.dt)}</p>\r\n                                    <img\r\n                                        src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}@2x.png`}\r\n                                        alt={forecast.weather[0].description}\r\n                                    />\r\n                                    <p>{Math.round(forecast.main.temp)}°C</p>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Grp204WeatherApp;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,OAAO,EAAEC,MAAM,QAAQ,mCAAmC;AACnE,SAASC,IAAI,QAAQ,sBAAsB;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC;IACnCe,OAAO,EAAE,KAAK;IACdC,IAAI,EAAE,IAAI;IACVC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMqB,MAAM,GAAG,kCAAkC;;EAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}